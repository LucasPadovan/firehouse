<%= content_tag :div, t('view.interventions.no_active_ceo'),
  class: 'alert alert-danger' if @no_active_ceo %>

<% intervention_form = nil %>
<%= simple_form_for @intervention, defaults: { input_html: { class: 'span10' } }, html: { data: { intervention_form: true } } do |f| %>
  <%= f.error_notification %>
  <%= content_tag :div, f.object.errors.full_messages.join(', '),
    class: 'alert alert-danger' if f.object.errors.size > 0 %>

  <div class="form-inputs">
    <div class='row-fluid'>
      <div class='span7'>
        <%= intervention_type_select(f) %>
        <%= f.input :address, input_html: { class: 'address-autocomplete span10' } %>
        <%= f.input :latitude, as: :hidden %>
        <%= f.input :longitude, as: :hidden  %>
        <%= f.input :near_corner, input_html: { data: { intervention_saver: true } } %>
        <%= f.input :kind_notes, input_html: { data: { intervention_saver: true } } %>
      </div>
      <div class='span5'>
        <div id="map_canvas" class="google-map"></div>
      </div>
    </div>
    <div class='row-fluid'>
      <div class='page-header'>
        <div class='row-fluid'>
          <div class='span6'>
            <h3><%= t('view.interventions.informer_title') %></h3>
          </div>
          <div class='span3 pull-right'>
            <%= f.label :sco_id %>
            <%= f.input :auto_sco_name, label: false, input_html: {
              value: @intervention.sco || current_sco,
              class: 'span10 autocomplete-field',
              data: {
                'autocomplete-id-target' => '#intervention_sco_id',
                'autocomplete-url' => autocomplete_for_sco_name_interventions_path(
                  format: :json
                )
              }
            } %>
          <%= f.input :sco_id, as: :hidden, input_html: {
                value: f.object.sco_id || current_sco.try(:id),
                data: { intervention_saver: true }
            } %>
          </div>
        </div>
      </div>

      <% @intervention.build_informer unless @intervention.informer %>
      <%= f.simple_fields_for :informer do |inf| %>
        <%= render partial: 'informer', locals: { inf: inf }  %>
      <% end %>

      <div class="row-fluid">
        <div class='span5'>
          <%= f.label :receptor_id %>
          <%= f.input :auto_receptor_name, label: false, input_html: {
            value: @intervention.receptor || current_user,
            class: 'span10 autocomplete-field',
            data: {
              'autocomplete-id-target' => '#intervention_receptor_id',
              'autocomplete-url' => autocomplete_for_receptor_name_interventions_path(
                format: :json
              )
            }
          } %>
          <%= f.input :receptor_id, as: :hidden, input_html: {
            value: current_user.id, data: { intervention_saver: true }
          } %>
        </div>
      </div>
    </div>

    <div class="<%= 'hide' unless @intervention.persisted? %>" >
      <div class='page-header'>
        <h3><%= t('view.interventions.output_title') %></h3>
      </div>

      <div class='row-fluid'>
        <div class='tabbable' data-endowments-items>
          <ul class="nav nav-tabs">
            <li class="active">
              <%= link_to(
                1, '#endowments_1',
                data: { toggle: 'tab', 'endowment-link' => true, number: 1 }
              ) %>
            </li>
              <% if (count = f.object.endowments.size) > 1 %>
                <% i = 1 %>
                <% (count - 1).times do %>
                  <% i += 1 %>
                  <li>
                    <%= link_to i, "#endowments_#{i}",
                      data: { toggle: 'tab', number: i } %>
                  </li>
                <% end %>
              <% end %>
            <%= link_to(
              '&#xe008;'.html_safe, '#',
              id: 'add_new_endowment', class: 'iconic'
            ) %>
          </ul>
          <div class="tab-content">
            <% i = 0 %>
            <% @intervention.endowments.build if @intervention.endowments.empty? %>
            <%= f.simple_fields_for :endowments do |e| %>
              <%= render partial: 'endowment', locals: { f: e, i: (i += 1) } %>
            <% end %>
          </div>
        </div>
      </div>
      <div class='row-fluid'>
        <h3>
          <%= Intervention.human_attribute_name 'observations' %>
          <span id='add_current_time' class='iconic btn btn-inverse'
            title="<%= t('view.interventions.set_time') %>"
            data-show-tooltip='true'>&#xe079;</span>
        </h3>
        <%= f.input :observations, label: false,
          input_html: { class: 'span11', rows: 5,
                        data: { intervention_saver: true } } %>
      </div>
    </div>
  </div>

  <div class="form-actions">
    <div class="pull-right"><%= yield :form_actions %></div>
    <% intervention_form = f %>
    <%= f.button :submit, class: 'btn btn-primary' %>
  </div>
<% end %>
<script type="text/javascript" charset="utf-8">
  var dynamicTab =
      '<%= content_tag(:li, link_to(
        "dynamicContent", "#endowments_dynamicContent",
        data: { toggle: 'tab', 'endowment-link' => true, number: "dynamicContent" }
      )
    ) %>'
  var dynamicForm =
      '<%= link_to_add_fields("+", intervention_form, :endowments) %>'

  var without_result = '<%= t("label.without_results") %>'
</script>
<script type="text/javascript" src="http://maps.googleapis.com/maps/api/js?libraries=places&sensor=true"></script>

<script type="text/javascript" charset="utf-8">
  $(document).ready(function() {
    var markerInfo
    <% if @intervention.latitude.present? && @intervention.longitude.present? %>
      markerInfo = {
          latitude    : '<%= @intervention.latitude %>'
        , longitude   : '<%= @intervention.longitude %>'
        , description : '<%= @intervention.formatted_description %>'
        , draggable   : true
      }
    <% end %>
    if (markerInfo) {
      Leaflet.initMap(markerInfo);
    }
    else {
      Leaflet.initMap();
    }
    autocompleteAddress('intervention_address');
  });

  Intervention.focusLastFocusedInput();
  Intervention.tokenizeAutocompleteInputs();
</script>
